# NOTE: This docker-compose.yml is meant to be just an example of how
# you could accomplish this on your own. It is not intended to work in
# all use-cases and must be adapted to fit your needs. This is merely
# a guideline.

# See docs.getsentry.com/on-premise/server/ for full
# instructions

version: '3.4'

x-defaults: &defaults
  restart: unless-stopped
  networks:
    - traefik-net
  build:
    context: .
    args:
      SENTRY_IMAGE: ${SENTRY_IMAGE}
  depends_on:
    - redis
    - postgres
    - memcached
    - smtp
  env_file: .env
  environment:
    SENTRY_MEMCACHED_HOST: memcached
    SENTRY_REDIS_HOST: redis
    SENTRY_POSTGRES_HOST: postgres
    SENTRY_EMAIL_HOST: smtp
  volumes:
    - sentry-data:/var/lib/sentry/files

services:
  smtp:
    restart: unless-stopped
    image: tianon/exim4
    networks:
      - traefik-net

  memcached:
    restart: unless-stopped
    image: memcached:1.5-alpine
    networks:
      - traefik-net

  redis:
    restart: unless-stopped
    image: redis:3.2-alpine
    networks:
      - traefik-net

  postgres:
    restart: unless-stopped
    image: postgres:9.5
    volumes:
      - sentry-postgres:/var/lib/postgresql/data
    networks:
      - traefik-net

  web:
    <<: *defaults
    deploy:
      placement:
        constraints:
          - node.role == worker
      labels:
        - 'traefik.enable=true'
        - 'traefik.frontend.rule=Host:sentry.psksyd.com'
        - 'traefik.port=9000'
        - 'traefik.frontend.headers.SSLProxyHeaders=X-Forwarded-Proto: https'

  cron:
    <<: *defaults
    command: run cron

  worker:
    <<: *defaults
    command: run worker

volumes:
  sentry-data:
    external: true
  sentry-postgres:
    external: true
networks:
  traefik-net:
    external: true
